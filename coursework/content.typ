// Some definitions presupposed by pandoc's typst output.
#let blockquote(body) = [
  #set text( size: 0.92em )
  #block(inset: (left: 1.5em, top: 0.2em, bottom: 0.2em))[#body]
]

#let horizontalrule = [
  #line(start: (25%,0%), end: (75%,0%))
]

#let endnote(num, contents) = [
  #stack(dir: ltr, spacing: 3pt, super[#num], contents)
]
#show terms: it => {
  it.children
    .map(child => [
      #strong[#child.term]
      #block(inset: (left: 1.5em, top: -0.4em))[#child.description]
      ])
    .join()
}

#let conf(
  title: none,
  authors: none,
  date: none,
  abstract: none,
  cols: 1,
  margin: (x: 1.25in, y: 1.25in),
  paper: "us-letter",
  lang: "en",
  region: "US",
  font: (),
  fontsize: 11pt,
  sectionnumbering: none,
  doc,
) = {
  set page(
    paper: paper,
    margin: margin,
    numbering: "1",
  )
  set par(justify: true)
  set text(lang: lang,
           region: region,
           font: font,
           size: fontsize)
  set heading(numbering: sectionnumbering)

  if title != none {
    align(center)[#block(inset: 2em)[
      #text(weight: "bold", size: 1.5em)[#title]
    ]]
  }

  if authors != none {
    let count = authors.len()
    let ncols = calc.min(count, 3)
    grid(
      columns: (1fr,) * ncols,
      row-gutter: 1.5em,
      ..authors.map(author =>
          align(center)[
            #author.name \
            #author.affiliation \
            #author.email
          ]
      )
    )
  }

  if date != none {
    align(center)[#block(inset: 1em)[
      #date
    ]]
  }

  if abstract != none {
    block(inset: 2em)[
    #text(weight: "semibold")[Abstract] #h(1em) #abstract
    ]
  }

  if cols == 1 {
    doc
  } else {
    columns(cols, doc)
  }
}
// show-rule отключен: стиль документа задается в main.typ
// #show: doc => conf(
//   cols: 1,
//   doc,
// )
 
 
// Оглавление удалено, оно генерируется автоматически в main.typ
= #strong[Подробное текстовое описание предметной области:]
<подробное-текстовое-описание-предметной-области>
CRM для «Красти Крабс» — это информационная система для автоматизации
бизнес‑процессов ресторана «Красти Крабс», специализирующегося на
приготовлении и продаже крабсбургеров. Она предназначена для учета
заказов, управления клиентами, контроля за запасами ингредиентов и
анализа показателей продаж. Система помогает повысить эффективность
работы ресторана, улучшить обслуживание посетителей и поддерживать
доступность возможности заказа легендарных бургеров.

Система объединяет данные о клиентах, заказах, меню, сотрудниках в
единую платформу. Это позволяет владельцу (Мистеру Крабсу)
контролировать все аспекты деятельности ресторана: от количества заказов
до остатка ингредиентов на складе.

= #strong[Зачем нужна информационная система:]
<зачем-нужна-информационная-система>
Информационная система «CRM для Красти Крабс» предназначена для
оптимизации процессов ресторанного бизнеса и повышения эффективности
легендарной закусочной мистера Крабса. Она обеспечивает централизованное
управление клиентами, заказами, меню, складом и сотрудниками. Система
помогает автоматизировать рутинные операции, сократить издержки,
повысить качество обслуживания и сделать бизнес более прозрачным и
прибыльным.

CRM не только ускоряет обслуживание гостей и экономит ресурсы, но и
создает основу для лояльности клиентов, анализа продаж и дальнейшего
роста заведения.

#strong[Основные задачи, которые решает система:]

#strong[1. Управление заказами и клиентами]

- Поддержка приёма и обработки заказов (на вынос, в зале, онлайн-заказ с
  доставкой).

- Ведение истории покупок и общих предпочтений клиентов.

- Формирование клиентской базы для программ лояльности и
  персонализированных предложений.

#strong[2. Контроль меню и ингредиентов]

- Автоматизация учёта меню: актуальные цены, состав блюд, доступность.

- Взаимосвязь заказов с остатками ингредиентов.

#strong[3. Управление сотрудниками и рабочими сменами]

- Хранение информации о персонале: роли, расписание работы, зарплаты.

- Учет производительности (например, среднее время приготовления заказа
  Спанч Бобом).

#strong[4. Финансовый учет и отчётность]

- Подсчёт дневной, недельной, месячной выручки.

- Контроль расходов на ингредиенты и зарплаты.

#strong[5. Программы лояльности]

- Реализация скидок для VIP-клиентов.

#strong[6. Мониторинг качества обслуживания]

- Сбор обратной связи от посетителей.

#strong[7. Централизованное управление и контроль владельца]

- Владелец имеет доступ к сводным данным обо всех процессах в реальном
  времени.

- Возможность контролировать персонал и состояние склада через единую
  панель.

= #strong[Требования к разрабатываемой информационной системе:]
<требования-к-разрабатываемой-информационной-системе>
#strong[Функциональные требования]

- #strong[FR-001] Система должна позволять пользователю оформлять заказ
  (на вынос, в зале или с доставкой).

- #strong[FR-002] Система должна предоставлять пользователю доступ к
  актуальному меню с ценами и составом блюд.

- #strong[FR-003] Система должна обеспечивать возможность отслеживания
  статуса заказа.

- #strong[FR-004] Система должна предоставлять возможность оставления
  пользователем обратной связи после оформления заказа.

- #strong[FR-005] Система должна поддерживать участие пользователей в
  программе лояльности (накопление бонусов, получение скидок).

- #strong[FR-006] Система должна обеспечивать возможность редактирования
  пользователем своих персональных данных (телефон, адрес доставки,
  предпочтения).

- #strong[FR-007] Система должна предоставлять пользователю доступ к
  истории его заказов.

- #strong[FR-008] Система должна позволять сотрудникам принимать и
  обрабатывать заказы (подтверждение, изменение статуса).

- #strong[FR-009] Система должна предоставлять возможность сотрудникам
  вводить и обновлять информацию о наличии ингредиентов.

- #strong[FR-010] Система должна предоставлять сотрудникам возможность
  фиксировать затраченное время на приготовление заказа.

- #strong[FR-011] Система должна обеспечивать доступ сотрудникам к
  расписанию рабочих смен.

- #strong[FR-012] Система должна поддерживать ведение учёта проданных
  блюд.

- #strong[FR-013] Система должна показывать ответственным сотрудникам
  новые заказы.

- #strong[FR-014] Система должна предоставлять управляющему доступ к
  статистике продаж (дневная, недельная, месячная).

- #strong[FR-015] Система должна обеспечивать управляющему возможность
  контролировать остатки ингредиентов на складе.

- #strong[FR-016] Система должна предоставлять управляющему возможность
  управления меню (цены, состав, доступность).

- #strong[FR-017] Система должна предоставлять управляющему возможность
  управления персоналом (назначение расписания, роли, зарплаты).

- #strong[FR-018] Система должна предоставлять управляющему доступ к
  обратной связи от клиентов.

#strong[Нефункциональные требования]

#strong[Удобство использования]

- #strong[UR-001] Система должна обеспечивать выполнение операции
  оформления заказа не более чем за 3 минуты.

- #strong[UR-002] Система должна предоставлять навигацию, позволяющую
  найти любое блюдо не более чем за 30 секунд.

#strong[Производительность]

- #strong[PR-001] Система должна загружать главный экран (меню) за ≤5
  секунд при стабильном подключении к интернету со скоростью ≥10 Мбит/с.

- #strong[PR-002] Система должна поддерживать работу минимум 10
  одновременных пользователей.

- #strong[PR-003] Система должна обновлять статус заказа и отображать
  изменения не позднее чем через 5 секунд.

- #strong[PR-004] Необходимо, чтобы система выдерживала нагрузку минимум
  360 000 запросов в день, что соответствует примерно 0.24 запросов в
  секунду.

- #strong[PR-005] Необходимо, чтобы сетевой канал имел пропускную
  способность минимум 122 ГБ в день, что соответствует пропускной
  способности не менее 12 Мбит/с.

- #strong[PR-006] Система должна обновлять информацию о состоянии
  складских остатков в течение 10 секунд после ввода изменений.

#strong[Атрибуты качества ПО]

- #strong[SQA-001] Система должна вести журналы (логи) действий
  сотрудников и изменений заказов.

#strong[Надежность]

- #strong[RR-001] Система должна быть доступна не менее 99% (допускается
  до 3 дней 14 часов 56 минут 18 секунд простоя в год) с учетом
  небольшой пользовательской базы.

- #strong[RR-002] Среднее время на устранение проблем должно составлять
  3 часа; в случае критического сбоя система должна быть восстановлена в
  течение 1 дня.

#strong[Безопасность]

- #strong[SEC-001] Система должна хранить пароли пользователей в виде
  хэшей.

- #strong[SEC-002] Система должна обеспечивать ролевую модель доступа
  (клиент, сотрудник, управляющий)

- #strong[SEC-003] Система должна быть защищена от SQL‑инъекций.

= #strong[Прецеденты:]
<прецеденты>
#align(center)[#table(
  columns: (1fr,),
  align: left,
  inset: 6pt,
  [Прецедент: Заказ на кассе],
  [ID: 1],
  [Краткое описание: Клиент приходит в ресторан, выбирает блюда и
  оплачивает заказ у кассы. Своих личных данных клиент не сообщает.],
  [Главный актер: Клиент (посетитель ресторана).],
  [Предусловия: Клиент находится в ресторане и стоит у кассы. Система
  работает и отображает актуальное меню.],
  [Основной поток: 

  + Клиент говорит кассиру, какие блюда он хочет.

  + Кассир через систему формирует заказ.

  + Система проверяет наличие ингредиентов и добавляет блюда в чек.

  + Система рассчитывает стоимость.

  + Клиент оплачивает заказ наличными или картой.

  + Система сохраняет заказ, передаёт на кухню.

  ],
  [Альтернативный поток:

  3а. Если нужное блюдо недоступно:

  #block(inset: (left: 1em))[
  + Кассир сообщает об этом клиенту.

  + Клиент выбирает другое блюдо или отказывается от заказа.
  ]

  ],
  [Постусловия: Заказ успешно создан и передан на кухню, или отменён.],
)
]

#align(center)[#table(
  columns: (1fr,),
  align: left,
  inset: 6pt,
  [Прецедент: Онлайн‑заказ с доставкой],
  [ID: 2],
  [Краткое описание: Клиент через сайт или приложение выбирает блюда,
  указывает адрес доставки и способ оплаты. Система формирует заказ и
  передаёт курьеру.],
  [Главный актер: Клиент (пользователь сайта/мобильного приложения).],
  [Предусловия: Клиент зашёл на сайт/приложение. Меню загружено и
  актуально.],
  [Основной поток: 

  + Клиент открывает меню.

  + Система отображает список блюд с ценами и составом.

  + Клиент добавляет выбранные позиции в корзину.

  + Клиент вводит контактные данные и адрес доставки.

  + Система рассчитывает итоговую стоимость заказа.

  + Клиент выбирает способ оплаты (онлайн или при получении).

  + Клиент подтверждает заказ.

  + Система сохраняет заказ и передаёт информацию курьеру.

  ],
  [Альтернативный поток:

  3а. Если выбранное блюдо недоступно:

  #block(inset: (left: 1em))[
  + Система уведомляет клиента.

  + Клиент может удалить/заменить блюдо или отменить заказ.
  ]

  6а. Если онлайн‑оплата не прошла:

  #block(inset: (left: 1em))[
  + Система уведомляет клиента.

  + Клиент выбирает другой метод оплаты или отменяет заказ.
  ]

  ],
  [Постусловия: Заказ успешно создан и передан курьеру, либо отменён.],
)
]

#align(center)[#table(
  columns: (1fr,),
  align: left,
  inset: 6pt,
  [Прецедент: Управление складом ингредиентов],
  [ID: 3],
  [Краткое описание: Сотрудник вводит данные о приходе или расходе
  ингредиентов в систему.],
  [Главный актер: Сотрудник склада.],
  [Предусловия: Сотрудник авторизован в системе.],
  [Основной поток: 

  + Сотрудник открывает раздел «Склад».

  + Вводит количество поступивших или списанных ингредиентов.

  + Система обновляет остатки.

  + Информация становится доступна для кассы, кухни и отчётности.

  ],
  [Альтернативный поток:

  2а. Если введено некорректное значение:

  #block(inset: (left: 1em))[
  + Система уведомляет сотрудника об ошибке.

  + Сотрудник исправляет данные.
  ]

  ],
  [Постусловия: Складские данные актуализированы.],
)
]

#align(center)[#table(
  columns: (1fr,),
  align: left,
  inset: 6pt,
  [Прецедент: Просмотр отчёта о продажах],
  [ID: 4],
  [Краткое описание: Управляющий анализирует финансовые показатели
  заведения через отчёты в системе.],
  [Главный актер: Управляющий (Мистер Крабс).],
  [Предусловия: Управляющий авторизован в системе.],
  [Основной поток: 

  + Управляющий выбирает период отчёта (день, неделя, месяц).

  + Система формирует отчёт по продажам.

  + Управляющий просматривает структуру продаж (по блюдам, сотрудникам,
    времени суток).

  + Система сохраняет факт просмотра и формирует статистику для истории.

  ],
  [Альтернативный поток:

  2а. Если данных за выбранный период нет:

  #block(inset: (left: 1em))[
  + Система уведомляет управляющего.

  + Управляющий выбирает другой период.
  ]

  ],
  [Постусловия: Управляющий получил отчёт о продажах или уведомление об
  отсутствии данных.],
)
]

#align(center)[#table(
  columns: (1fr,),
  align: left,
  inset: 6pt,
  [Прецедент: Просмотр отчёта о продажах],
  [ID: 5],
  [Краткое описание: Управляющий анализирует финансовые показатели
  заведения через отчёты в системе.],
  [Главный актер: Управляющий (Мистер Крабс).],
  [Предусловия: Управляющий авторизован в системе.],
  [Основной поток: 

  #block[
  #set enum(numbering: "1.", start: 5)
  + Управляющий выбирает период отчёта (день, неделя, месяц).

  + Система формирует отчёт по продажам.

  + Управляющий просматривает структуру продаж (по блюдам, сотрудникам,
    времени суток).

  + Система сохраняет факт просмотра и формирует статистику для истории.
  ]

  ],
  [Альтернативный поток:

  2а. Если данных за выбранный период нет:

  #block(inset: (left: 1em))[
  #set enum(numbering: "1.", start: 3)
  + Система уведомляет управляющего.

  + Управляющий выбирает другой период.
  ]

  ],
  [Постусловия: Управляющий получил отчёт о продажах или уведомление об
  отсутствии данных.],
)
]

#align(center)[#table(
  columns: (1fr,),
  align: left,
  inset: 6pt,
  [Прецедент: Регистрация клиента в системе (сайт/приложение)],
  [ID: 6],
  [Краткое описание: Новый клиент создаёт учётную запись, чтобы
  оформлять онлайн‑заказы и участвовать в программе лояльности.],
  [Главный актер: Клиент.],
  [Предусловия: Сайт/приложение доступно.],
  [Основной поток: 

  + Клиент открывает страницу регистрации.

  + Вводит личные данные (имя, телефон, email/логин, пароль).

  + Система проверяет корректность данных.

  + Система создаёт новый профиль клиента.

  ],
  [Альтернативный поток:

  3а. Если данные некорректны:

  #block(inset: (left: 1em))[
  + Клиент получает уведомление

  + Клиент исправляет ошибки.
  ]

  3б. Если телефон/email уже зарегистрирован:

  #block(inset: (left: 1em))[
  + Система уведомляет клиента

  + Система предлагает вход.
  ]

  ],
  [Постусловия: Управляющий получил отчёт о продажах или уведомление об
  отсутствии данных.],
)
]

#align(center)[#table(
  columns: (1fr,),
  align: left,
  inset: 6pt,
  [Прецедент: Авторизация клиента в системе],
  [ID: 7],
  [Краткое описание: Клиент авторизуется для просмотра истории заказов,
  персональных данных и участия в бонусных программах.],
  [Главный актер: Клиент.],
  [Предусловия: Клиент зарегистрирован в системе.],
  [Основной поток: 

  + Клиент вводит логин и пароль.

  + Система проверяет данные.

  + В случае успешной проверки клиент получает доступ в личный кабинет.

  ],
  [Альтернативный поток:

  2а. Если данные некорректны:

  + Система сообщает об ошибке.

  + Клиент может попробовать снова или восстановить пароль.

  ],
  [Постусловия: Клиент получил доступ к системе или остался
  неавторизованным.],
)
]

#align(center)[#table(
  columns: (1fr,),
  align: left,
  inset: 6pt,
  [Прецедент: Управление личным кабинетом],
  [ID: 8],
  [Краткое описание: Клиент меняет свои данные (адрес доставки,
  пароль).],
  [Главный актер: Клиент.],
  [Предусловия: Клиент авторизован в системе.],
  [Основной поток: 

  + Клиент авторизуется в системе.

  + Открывает «Личный кабинет».

  + Редактирует данные.

  + Система сохраняет изменения.

  ],
  [Альтернативный поток:

  3а. Если данные некорректны:

  #block(inset: (left: 1em))[
  #set enum(numbering: "1.", start: 3)
  + Клиент получает уведомление

  + Клиент исправляет ошибки.
  ]

  ],
  [Постусловия: Данные клиента обновлены.],
)
]

#align(center)[#table(
  columns: (1fr,),
  align: left,
  inset: 6pt,
  [Прецедент: Управление меню],
  [ID: 9],
  [Краткое описание: Управляющий обновляет информацию о блюдах: меняет
  цену, состав и доступность.],
  [Главный актер: Управляющий.],
  [Предусловия: Управляющий авторизован в системе.],
  [Основной поток: 

  + Управляющий открывает раздел «Меню».

  + Выбирает блюдо для изменения.

  + Редактирует цену, состав или статус доступности.

  + Система сохраняет обновлённые данные и обновляет меню.

  ],
  [Альтернативный поток:

  3а. Если управляющий вводит некорректные данные:

  #block(inset: (left: 1em))[
  + Система сообщает об ошибке.

  + Управляющий корректирует данные.
  ]

  ],
  [Постусловия: Меню в системе актуализировано.],
)
]

#align(center)[#table(
  columns: (1fr,),
  align: left,
  inset: 6pt,
  [Прецедент: Управление персоналом],
  [ID: 10],
  [Краткое описание: Управляющий назначает роли, рабочие смены и
  зарплаты сотрудников.],
  [Главный актер: Управляющий.],
  [Предусловия: Управляющий авторизован в системе.],
  [Основной поток: 

  + Управляющий открывает раздел «Персонал».

  + Выбирает сотрудника.

  + Редактирует данные сотрудника (роль, смены, оклад).

  + Система сохраняет изменения и обновляет расписание.

  ],
  [Альтернативный поток:

  3а. При вводе некорректных данных:

  #block(inset: (left: 1em))[
  + Система сообщает об ошибке.

  + Управляющий исправляет ввод.
  ]

  ],
  [+ Постусловия: Информация о сотруднике актуализирована.

  ],
)
]

#align(center)[#table(
  columns: (1fr,),
  align: left,
  inset: 6pt,
  [Прецедент: Отслеживание статуса онлайн-заказа],
  [ID: 11],
  [Краткое описание: Клиент отслеживает текущее состояние своего
  заказа.],
  [Главный актер: Клиент.],
  [Предусловия: Клиент оформил заказ.],
  [Основной поток: 

  + Клиент открывает раздел «Мои заказы».

  + Система отображает список заказов и их статусы.

  + Клиент просматривает информацию о своём заказе.

  ],
  [Альтернативный поток:

  2а. Если данные не загрузились:

  #block(inset: (left: 1em))[
  + Система уведомляет клиента об ошибке связи.

  + Клиент повторяет попытку позже.
  ]

  ],
  [#block[
  #set enum(numbering: "1.", start: 2)
  + Постусловия: Клиент получил актуальную информацию об онлайн-заказе.
  ]

  ],
)
]

#align(center)[#table(
  columns: (1fr,),
  align: left,
  inset: 6pt,
  [Прецедент: Обратная связь],
  [ID: 12],
  [Краткое описание: После завершения заказа клиент оставляет отзыв о
  блюде и сервисе.],
  [Главный актер: Клиент.],
  [Предусловия: Заказ оплачен и зарегистрирован в системе.],
  [Основной поток: 

  + Клиент получает в интерфейсе предложение оставить отзыв.

  + Заполняет форму: оценку, комментарий.

  + Система сохраняет отзыв.

  + Управляющий получает доступ к обратной связи.

  ],
  [Альтернативный поток:

  2а. Клиент не оставляет отзыв:

  #block(inset: (left: 1em))[
  + Система ничего не сохраняет.
  ]

  ],
  [Постусловия: Отзыв сохранён и доступен управляющему или
  отсутствует.],
)
]

#align(center)[#table(
  columns: (1fr,),
  align: left,
  inset: 6pt,
  [Прецедент: Финансовый учёт],
  [ID: 13],
  [Краткое описание: Система подсчитывает выручку и расходы ресторана.],
  [Главный актер: Управляющий.],
  [Предусловия: Управляющий авторизован в системе.],
  [Основной поток: 

  + Управляющий открывает раздел «Отчёты».

  + Система формирует отчёт выручки и расходов (ингредиенты, зарплаты).

  + Управляющий просматривает итоговую статистику.

  ],
  [Альтернативный поток:

  2а. Если данных нет (например, новый день):

  #block(inset: (left: 1em))[
  + Система уведомляет управляющего об отсутствии информации.
  ]

  ],
  [Постусловия: Управляющий получил сводку финансов.],
)
]

#align(center)[#table(
  columns: (1fr,),
  align: left,
  inset: 6pt,
  [Прецедент: Принятие и обработка заказов],
  [ID: 14],
  [Краткое описание: Сотрудник принимает поступивший заказ и изменяет
  его статус.],
  [Главный актер: Сотрудник кассы или кухни.],
  [Предусловия: Сотрудник авторизован в системе.],
  [Основной поток: 

  + Сотрудник открывает список заказов.

  + Выбирает новый заказ.

  + Подтверждает приём заказа.

  + Меняет статус по мере готовности («Готовится», «Готов»).

  + Система обновляет данные и отображает статус клиенту.

  ],
  [Альтернативный поток:

  2а. Если заказ отменён клиентом до подтверждения:

  #block(inset: (left: 1em))[
  + Система снимает заказ с обработки.
  ]

  ],
  [Постусловия: Статус заказа изменён и отображается всем
  заинтересованным сторонам.],
)
]

#align(center)[#table(
  columns: (1fr,),
  align: left,
  inset: 6pt,
  [Прецедент: Фиксация времени приготовления заказа],
  [ID: 15],
  [Краткое описание: Система фиксирует время, затраченное на
  приготовление заказа.],
  [Главный актер: Система],
  [Предусловия: Заказ в состоянии «Готовится».],
  [Основной поток: 

  + Заказ переходит в статус «Готов»

  + Система рассчитывает разницу времени между состяниями «Готовится» и
    «Готов».

  ],
  [Альтернативный поток:

  1а. Если заказ отменён в процессе приготовления:

  #block(inset: (left: 1em))[
  + Система не рассчитывает время для этого заказа..
  ]

  ],
  [Постусловия: Время приготовления заказа сохранено и доступно в
  истории заказов.],
)
]

#align(center)[#table(
  columns: (1fr,),
  align: left,
  inset: 6pt,
  [Прецедент: Учёт проданного блюда],
  [ID: 16],
  [Краткое описание: Система фиксирует продажу блюда автоматически при
  завершении заказа.],
  [Главный актер: Система],
  [Предусловия: Заказ успешно оформлен и оплачен.],
  [Основной поток: 

  + При закрытии заказа система фиксирует каждое проданное блюдо.

  + Информация сохраняется в базе для складского учёта и отчётов.

  ],
  [Альтернативный поток:

  1а. Если заказ отменён до оплаты:

  #block(inset: (left: 1em))[
  + Продажа не фиксируется.
  ]

  ],
  [Постусловия: Данные о проданных блюдах учтены.],
)
]

#align(center)[#table(
  columns: (1fr,),
  align: left,
  inset: 6pt,
  [Прецедент: Авторизация сотрудника/управляющего],
  [ID: 17],
  [Краткое описание: Сотрудник или управляющий входит в систему с учётом
  своей роли доступа.],
  [Главный актер: Сотрудник или Управляющий.],
  [Предусловия: Пользователь зарегистрирован в системе.],
  [Основной поток: 

  + Пользователь вводит логин и пароль.

  + Система проверяет данные и роль пользователя.

  + В случае успеха система предоставляет доступ к рабочему интерфейсу в
    зависимости от роли.

  ],
  [Альтернативный поток:

  2а. Если данные некорректны:

  #block(inset: (left: 1em))[
  + Система сообщает об ошибке.

  + Пользователь может повторить попытку.
  ]

  ],
  [Постусловия: Пользователь получил доступ к системе в рамках своей
  роли или остался неавторизован.],
)
]
 
= #strong[Бизнес‑процессы]

// Переверстанный шаблон бизнес‑процесса в виде аккуратной карточки
#let bp(
  name: none,
  goal: none,
  actors: none,
  steps: none,
  result: none,
) = [
  #block(
    inset: 10pt,
    radius: 6pt,
    stroke: (paint: luma(0.85), thickness: 0.7pt),
    fill: luma(0.98),
  )[
    // Заголовок процесса (без попадания в оглавление)
    #text(weight: "bold", size: 1.05em)[#name]
    #v(2pt)

    // Общие настройки типографики внутри карточки
    #set par(spacing: 0.25em, leading: 1.18em)
    #set list(spacing: 0.2em)

    // Краткие сведения в двух колонках
    #grid(
      columns: (auto, 1fr),
      column-gutter: 1.2em,
      row-gutter: 0.4em,
      [#text(weight: "semibold")[Цель]], [#goal],
      [#text(weight: "semibold")[Участники]], [#actors],
    )

    #v(6pt)
    #text(weight: "semibold")[Ход процесса]
    #set enum(numbering: "1.")
    #steps

    #v(4pt)
    #grid(
      columns: (auto, 1fr),
      column-gutter: 1.2em,
      row-gutter: 0.4em,
      [#text(weight: "semibold")[Результат]], [#result],
    )
  ]
  #v(10pt)
]

#bp(
  name: [1. Приём заказа в ресторане],
  goal: [быстро принять заказ гостя и передать его на кухню.],
  actors: [Клиент; Кассир; Система; Кухня],
  steps: [
    + Клиент сообщает кассиру желаемые блюда.
    + Кассир вносит заказ в систему.
    + Система проверяет наличие ингредиентов.
      - Если ингредиенты есть, заказ формируется.
      - Если чего-то не хватает, кассир предлагает замену.
    + Система рассчитывает стоимость.
    + Клиент оплачивает заказ.
    + Заказ фиксируется в системе и уходит на кухню.
  ],
  result: [Заказ создан, оплачен и готовится.],
)

#bp(
  name: [2. Онлайн‑заказ с доставкой],
  goal: [предоставить клиенту возможность заказать с сайта или приложения.],
  actors: [Клиент; CRM],
  steps: [
    + Клиент открывает меню.
    + Добавляет блюда в корзину.
    + Указывает адрес и контактные данные.
    + Система рассчитывает итоговую стоимость.
    + Клиент выбирает способ оплаты (онлайн/наличными).
    + Система формирует заказ.
    + Заведение получает данные и сотрудники передают заказ в доставку.
  ],
  result: [заказ передан в доставку или отменён.],
)

#bp(
  name: [3. Приготовление заказа],
  goal: [обеспечить своевременное приготовление блюд.],
  actors: [Повар; Система],
  steps: [
    + Повар видит новые заказы в панели.
    + Отмечает начало приготовления — система фиксирует время.
    + Готовит заказ.
    + Отмечает статус «Готов».
    + Система сохраняет время приготовления.
  ],
  result: [заказ готов, клиент получает уведомление.],
)

#bp(
  name: [4. Управление складом ингредиентов],
  goal: [поддерживать актуальные остатки ингредиентов.],
  actors: [Сотрудник склада; Система; Управляющий],
  steps: [
    + Сотрудник вносит приход/расход ингредиентов.
    + Система обновляет остатки.
    + Информация отображается кассе и кухне.
    + При критическом остатке система уведомляет управляющего.
  ],
  result: [складские данные актуальны, принятие заказов не сбоит.],
)

#bp(
  name: [5. Управление персоналом],
  goal: [планировать рабочие смены, роли и оплату.],
  actors: [Управляющий; CRM; Сотрудники],
  steps: [
    + Управляющий открывает раздел «Персонал».
    + Назначает смены, роли, зарплаты.
    + Система сохраняет изменения.
    + Сотрудники видят актуальное расписание.
  ],
  result: [персонал распределён, план работы синхронизирован.],
)

#bp(
  name: [6. Финансовый учёт и отчётность],
  goal: [контролировать прибыль и расходы.],
  actors: [Управляющий; CRM],
  steps: [
    + Система фиксирует каждую транзакцию (выручка, списания ингредиентов, оплата труда).
    + Управляющий выбирает период отчёта.
    + Система строит аналитику продаж и расходов.
    + Управляющий принимает решения (например, оптимизация затрат).
  ],
  result: [отчёт готов, есть основа для управленческих решений.],
)

#bp(
  name: [7. Программа лояльности],
  goal: [удержание клиентов.],
  actors: [Клиент; CRM; Управляющий],
  steps: [
    + Клиент регистрируется в системе.
    + При заказах накапливаются бонусы или скидки.
    + Система хранит историю заказов и предпочтений.
    + Управляющий формирует акционные предложения.
  ],
  result: [клиенты возвращаются охотнее, бизнес растёт.],
)

#bp(
  name: [8. Обратная связь клиентов],
  goal: [улучшение качества сервиса.],
  actors: [Клиент; CRM; Управляющий],
  steps: [
    + После заказа клиенту предлагается оставить отзыв.
    + Клиент пишет оценку и комментарий.
    + CRM сохраняет отзыв.
    + Управляющий анализирует отзывы и принимает решения.
  ],
  result: [качество сервиса улучшается.],
)

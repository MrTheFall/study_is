package com.example.orgmanager.model;

import jakarta.persistence.*;
import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.SourceType;

import java.util.Date;

@Entity
@Table(name = "organization")
public class Organization {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(updatable = false, nullable = false)
    private Integer id; // generated by DB

    @NotNull
    @NotBlank
    @Column(nullable = false)
    private String name;

    @NotNull
    @Valid
    @ManyToOne(optional = false, cascade = {CascadeType.PERSIST, CascadeType.MERGE})
    @JoinColumn(name = "coordinates_id", nullable = false,
            foreignKey = @ForeignKey(name = "fk_org_coordinates"))
    private Coordinates coordinates;

    @Temporal(TemporalType.TIMESTAMP)
    @CreationTimestamp(source = SourceType.DB)
    @Column(nullable = false, name = "creation_date", updatable = false, insertable = false,
            columnDefinition = "timestamp default current_timestamp")
    private Date creationDate;

    @NotNull
    @Valid
    @ManyToOne(optional = false, cascade = {CascadeType.PERSIST, CascadeType.MERGE})
    @JoinColumn(name = "official_address_id", nullable = false,
            foreignKey = @ForeignKey(name = "fk_org_official_address"))
    private Address officialAddress;

    @Positive
    @Column(name = "annual_turnover", nullable = false)
    private float annualTurnover;

    @NotNull
    @Positive
    @Column(name = "employees_count", nullable = false)
    private Long employeesCount;

    @Positive
    @Column(nullable = false)
    private double rating;

    @NotNull
    @NotBlank
    @Column(name = "full_name", nullable = false)
    private String fullName;

    @Enumerated(EnumType.STRING)
    private OrganizationType type; // can be null

    @NotNull
    @Valid
    @ManyToOne(optional = false, cascade = {CascadeType.PERSIST, CascadeType.MERGE})
    @JoinColumn(name = "postal_address_id", nullable = false,
            foreignKey = @ForeignKey(name = "fk_org_postal_address"))
    private Address postalAddress;

    public Integer getId() { return id; }
    public void setId(Integer id) { this.id = id; }
    public String getName() { return name; }
    public void setName(String name) { this.name = name; }
    public Coordinates getCoordinates() { return coordinates; }
    public void setCoordinates(Coordinates coordinates) { this.coordinates = coordinates; }
    public Date getCreationDate() { return creationDate; }
    public Address getOfficialAddress() { return officialAddress; }
    public void setOfficialAddress(Address officialAddress) { this.officialAddress = officialAddress; }
    public float getAnnualTurnover() { return annualTurnover; }
    public void setAnnualTurnover(float annualTurnover) { this.annualTurnover = annualTurnover; }
    public Long getEmployeesCount() { return employeesCount; }
    public void setEmployeesCount(Long employeesCount) { this.employeesCount = employeesCount; }
    public double getRating() { return rating; }
    public void setRating(double rating) { this.rating = rating; }
    public String getFullName() { return fullName; }
    public void setFullName(String fullName) { this.fullName = fullName; }
    public OrganizationType getType() { return type; }
    public void setType(OrganizationType type) { this.type = type; }
    public Address getPostalAddress() { return postalAddress; }
    public void setPostalAddress(Address postalAddress) { this.postalAddress = postalAddress; }
}
